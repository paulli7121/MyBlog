<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.changyu.dao.BlogMapper">

    <resultMap id="blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="viewCount" column="view_count"/>
        <result property="upvote" column="upvote"/>
        <result property="shareStatementEnable" column="share_statement_enable"/>
        <result property="commentEnable" column="comment_enable"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <association property="type" column="type_id" javaType="Type" select="findTypeByTypeId"/>
        <association property="user" column="user_id" javaType="User" select="findUserByUserId"/>
        <collection property="tags" column="id" javaType="ArrayList" ofType="Tag" select="listTagsByBlogId"/>
    </resultMap>

    <select id="findTypeByTypeId" resultType="Type">
        select t.* from t_type t where t.id=#{type_id};
    </select>

    <select id="findUserByUserId" resultType="User">
        select u.* from t_user u where u.id=#{user_id};
    </select>

    <select id="listTagsByBlogId" resultType="Tag">
        select t.* from t_tag t, t_blog_tag bt where bt.bid=#{id} and bt.tid=t.id;
    </select>

    <select id="findCommentsByBlogId" resultType="Comment">
        select c.* from t_comment c where c.blog_id=#{id};
    </select>

    <select id="findById" resultMap="blog">
        select b.* from t_blog b where b.id = #{id};
    </select>

    <select id="listBlogsByYear" resultMap="blog">
        select b.* from t_blog b where date_format(b.create_time,'%Y')=#{year};
    </select>

    <select id="listPublishedBlogs" resultMap="blog">
        select b.* from t_blog b where b.published = true
        order by b.update_time desc
    </select>

    <select id="listBlogsByTagId" resultMap="blog">
        select b.*, tag.id from t_blog b, t_tag tag, t_blog_tag bt
        where b.id=bt.bid and tag.id=bt.tid and tag.id=#{tagId}
        and b.published=true
        order by b.update_time desc
    </select>

    <select id="listBlogsByTypeId" resultMap="blog">
        select b.* from t_blog b where b.type_id=#{typeId}
        and b.published=true
        order by b.update_time desc
    </select>

    <select id="listFilteredBlogs" parameterType="Blog" resultMap="blog">
        select b.id, b.title, b.update_time, b.published, b.recommend, b.type_id,
               t.id, t.name
        from t_blog b, t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="blog.recommend != null">
                and b.recommend=#{blog.recommend}
            </if>
            <if test="blog.typeId != null">
                and b.type_id=#{blog.typeId}
            </if>
            <if test="blog.title != null">
                <bind name="filterPattern" value="'%' + blog.title + '%'"/>
                and b.title like #{filterPattern}
            </if>
        </where>
        order by b.update_time desc
    </select>

    <select id="listQueryBlogs" parameterType="string" resultMap="blog">
        select b.* from t_blog b
        where b.title like #{query} or b.content like #{query} or b.description like #{query}
        and b.published = true
        order by b.update_time desc
    </select>

    <select id="listPublishedRecommendTop" parameterType="int" resultMap="blog">
        select b.* from t_blog b
        where b.published=true and b.recommend=true
        order by b.update_time desc
        limit #{size};
    </select>

    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (id, title, description, content, flag, upvote, view_count,
                            share_statement_enable, comment_enable, published, recommend, create_time, update_time,
                            type_id, user_id)
                            values (#{id}, #{title}, #{description}, #{content}, #{flag}, #{upvote},
                                    #{viewCount}, #{shareStatementEnable},
                                    #{commentEnable}, #{published}, #{recommend}, #{createTime}, #{updateTime},
                                    #{typeId}, #{userId});
    </insert>

    <update id="updateBlog" parameterType="Blog">
        update t_blog set title=#{title}, description=#{description}, content=#{content}, upvote=#{upvote},
                          flag=#{flag}, view_count=#{viewCount}, share_statement_enable=#{shareStatementEnable},
                          comment_enable=#{commentEnable}, published=#{published},
                          recommend=#{recommend}, create_time=#{createTime}, update_time=#{updateTime}, type_id=#{typeId}, user_id=#{userId}
        where id=#{id};
    </update>

    <update id="updateViewCount" parameterType="long">
        update t_blog set view_count=view_count+1
        where id=#{id};
    </update>

    <update id="upvote" parameterType="long">
        update t_blog set upvote=upvote+1
        where id=#{blogId};
    </update>

    <insert id="saveBlogTagMapping">
        insert into t_blog_tag (bid, tid) values
        <foreach collection="tagIdList" item="tagId" separator=",">
            (#{blogId}, #{tagId})
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="long">
        delete from t_blog where id=#{id};
    </delete>

    <delete id="deleteBlogTagMapping">
        delete from t_blog_tag where bid=#{blogId} and tid in
        <foreach collection="tagIdList" item="tagId" open="(" separator="," close=")">
            #{tagId}
        </foreach>
    </delete>

    <select id="countBlogs" resultType="long">
        select count(*) from t_blog b where b.published=true;
    </select>

    <select id="findGroupYear" resultType="string">
        select date_format(b.create_time,'%Y') year from t_blog b group by year order by year desc;
    </select>

</mapper>